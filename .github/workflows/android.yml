name: Android Build (Capacitor minimal)

on:
  workflow_dispatch:
    inputs:
      appName:
        description: "Display name of the app (e.g., Wrap Craft)"
        required: true
      bundleId:
        description: "Android applicationId / bundle id (e.g., com.example.app)"
        required: true
      siteUrl:
        description: "Your web app URL (https://...); the app loads this URL"
        required: true
      buildType:
        description: "Build variant: debug (APK) or release (unsigned AAB/APK)"
        required: false
        default: "debug"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Bootstrap minimal Capacitor project
        run: |
          set -euo pipefail
          WORKDIR=cap-app
          mkdir -p "$WORKDIR"/dist
          cd "$WORKDIR"

          # package.json (no caching assumptions)
          cat > package.json <<'EOF'
          {
            "name": "wrap-craft-capacitor",
            "version": "1.0.0",
            "private": true,
            "dependencies": {
              "@capacitor/core": "^6.1.2"
            },
            "devDependencies": {
              "@capacitor/cli": "^6.1.2",
              "@capacitor/android": "^6.1.2"
            }
          }
          EOF

          # Minimal web assets (redirect to your site)
          cat > dist/index.html <<'EOF'
          <!doctype html>
          <html>
            <head>
              <meta charset="utf-8" />
              <meta name="viewport" content="width=device-width, initial-scale=1" />
              <title>wrap-craft</title>
              <style>body{font-family:system-ui,sans-serif;display:grid;place-items:center;height:100vh;margin:0}</style>
            </head>
            <body>
              <div>Launchingâ€¦</div>
              <script>location.replace("${{ inputs.siteUrl }}");</script>
            </body>
          </html>
          EOF

          # Capacitor config (we skip `cap init` entirely to avoid CLI option issues)
          cat > capacitor.config.ts <<'EOF'
          import type { CapacitorConfig } from '@capacitor/cli';
          const config: CapacitorConfig = {
            appId: '${{ inputs.bundleId }}',
            appName: '${{ inputs.appName }}',
            webDir: 'dist',
            server: {
              url: '${{ inputs.siteUrl }}',
              cleartext: true
            }
          };
          export default config;
          EOF

          npm install --no-audit --no-fund
          npx cap add android --verbose

      - name: Build Android
        working-directory: cap-app/android
        run: |
          set -euo pipefail
          chmod +x ./gradlew
          if [ "${{ inputs.buildType }}" = "release" ]; then
            ./gradlew bundleRelease assembleRelease
          else
            ./gradlew assembleDebug
          fi

      - name: Upload APK (debug) or APK/AAB (release)
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ inputs.buildType }}-artifacts
          path: |
            cap-app/android/app/build/outputs/apk/debug/app-debug.apk
            cap-app/android/app/build/outputs/apk/release/app-release-unsigned.apk
            cap-app/android/app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: ignore
