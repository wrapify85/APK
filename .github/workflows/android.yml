name: Android Build (Self-Contained)

on:
  workflow_dispatch:
    inputs:
      appName:
        description: Display name for the app (e.g., Wrap Craft)
        required: true
        type: string
      bundleId:
        description: Application ID (e.g., com.yourcompany.wrapcraft)
        required: true
        type: string
      siteUrl:
        description: Web app URL to wrap (must be https://)
        required: true
        type: string

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout (not used by build but keeps workspace consistent)
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java (JDK 17 for modern Android Gradle Plugin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android licenses and install SDK packages
        shell: bash
        run: |
          yes | sdkmanager --licenses > /dev/null
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Bootstrap Capacitor wrapper
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p wrapper
          cd wrapper

          # Minimal Node project
          npm init -y

          # Install Capacitor (CLI, core, and Android)
          npm install --save-exact @capacitor/core@6 @capacitor/android@6
          npm install --save-dev --save-exact @capacitor/cli@6

          # Create Capacitor config using workflow inputs
          cat > capacitor.config.ts << 'EOF'
          import type { CapacitorConfig } from '@capacitor/cli';

          const config: CapacitorConfig = {
            appId: '${{ inputs.bundleId }}',
            appName: '${{ inputs.appName }}',
            webDir: 'dist',
            server: {
              url: '${{ inputs.siteUrl }}',
              cleartext: true
            },
            android: {
              allowMixedContent: true
            }
          };

          export default config;
          EOF

          # Add Android platform and sync
          npx cap add android --skip-deps
          npx cap sync android

      - name: Build Debug APK
        shell: bash
        working-directory: wrapper/android
        run: |
          set -euo pipefail
          chmod +x ./gradlew
          ./gradlew assembleDebug --no-daemon

      # Note: Release AAB typically requires a keystore. Omitted to avoid failures.
      # If you later add signing, you can enable this:
      # - name: Build Release AAB
      #   shell: bash
      #   working-directory: wrapper/android
      #   run: ./gradlew bundleRelease --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            wrapper/android/app/build/outputs/apk/debug/*.apk
          if-no-files-found: error
