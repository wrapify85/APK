name: Build Android APK/AAB

on:
  workflow_dispatch:
    inputs:
      appName:
        description: 'App Name'
        required: true
        default: 'My App'
      bundleId:
        description: 'Bundle ID'
        required: true
        default: 'com.example.app'
      siteUrl:
        description: 'Site URL'
        required: true
        default: 'https://example.com'
      buildType:
        description: 'Build Type'
        required: false
        default: 'apk'
        type: choice
        options:
          - apk
          - aab

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Set JAVA_HOME
      run: |
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "Java version: $(java -version)"
        echo "JAVA_HOME is: $JAVA_HOME"

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.0

    - name: Create project directory
      run: mkdir -p android-app && cd android-app

    - name: Initialize npm project
      working-directory: android-app
      run: |
        npm init -y
        npm install @capacitor/core@latest @capacitor/cli@latest @capacitor/android@latest

    - name: Initialize Capacitor
      working-directory: android-app
      run: |
        npx cap init "${{ github.event.inputs.appName }}" "${{ github.event.inputs.bundleId }}" --web-dir=www

    - name: Create web directory and index.html
      working-directory: android-app
      run: |
        mkdir -p www
        cat > www/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <title>${{ github.event.inputs.appName }}</title>
            <meta name="format-detection" content="telephone=no">
            <meta name="msapplication-tap-highlight" content="no">
            <meta name="viewport" content="initial-scale=1, width=device-width, viewport-fit=cover">
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                html, body { height: 100%; overflow: hidden; }
                iframe { width: 100%; height: 100%; border: none; }
            </style>
        </head>
        <body>
            <iframe src="${{ github.event.inputs.siteUrl }}" allow="camera; microphone; geolocation"></iframe>
            <script src="capacitor.js"></script>
        </body>
        </html>
        EOF

    - name: Add Android platform
      working-directory: android-app
      run: npx cap add android

    - name: Create gradle.properties
      working-directory: android-app/android
      run: |
        cat > gradle.properties << 'EOF'
        android.useAndroidX=true
        android.enableJetifier=true
        org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m
        org.gradle.daemon=false
        android.compileSdkVersion=33
        android.targetSdkVersion=33
        android.buildToolsVersion=33.0.0
        EOF

    - name: Update build.gradle (app level)
      working-directory: android-app/android/app
      run: |
        cat > build.gradle << 'EOF'
        apply plugin: 'com.android.application'

        android {
            compileSdkVersion 33
            buildToolsVersion "33.0.0"
            
            defaultConfig {
                applicationId "${{ github.event.inputs.bundleId }}"
                minSdkVersion 22
                targetSdkVersion 33
                versionCode 1
                versionName "1.0"
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_11
                targetCompatibility JavaVersion.VERSION_11
            }
        }

        repositories {
            google()
            mavenCentral()
        }

        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'com.getcapacitor:capacitor-android:5.+'
        }

        apply from: 'capacitor.build.gradle'
        EOF

    - name: Update build.gradle (project level)
      working-directory: android-app/android
      run: |
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:7.4.2'
            }
        }

        apply from: "variables.gradle"

        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }

        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF

    - name: Sync Capacitor
      working-directory: android-app
      run: npx cap sync android

    - name: Make gradlew executable
      working-directory: android-app/android
      run: chmod +x gradlew

    - name: Clean project
      working-directory: android-app/android
      run: ./gradlew clean

    - name: Build APK
      if: github.event.inputs.buildType == 'apk' || github.event.inputs.buildType == ''
      working-directory: android-app/android
      run: ./gradlew assembleRelease

    - name: Build AAB
      if: github.event.inputs.buildType == 'aab'
      working-directory: android-app/android
      run: ./gradlew bundleRelease

    - name: Upload APK Artifact
      if: github.event.inputs.buildType == 'apk' || github.event.inputs.buildType == ''
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: android-app/android/app/build/outputs/apk/release/*.apk

    - name: Upload AAB Artifact
      if: github.event.inputs.buildType == 'aab'
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: android-app/android/app/build/outputs/bundle/release/*.aab

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          android-app/android/app/build/reports/
          android-app/android/app/build/outputs/logs/
