name: Build Android

on:
  workflow_dispatch:
    inputs:
      appName:
        description: 'App Name'
        required: true
        default: 'WrapCraft App'
      bundleId:
        description: 'Bundle ID'
        required: true
        default: 'com.wrapcraft.app'
      siteUrl:
        description: 'Site URL to wrap'
        required: true
        default: 'https://example.com'
      buildType:
        description: 'Build Type'
        required: false
        default: 'apk'
        type: choice
        options:
        - apk
        - aab

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Create Capacitor project
      run: |
        # Install Capacitor CLI globally
        npm install -g @capacitor/cli@5.7.8
        npm install -g @capacitor/core@5.7.8
        
        # Create a new project directory
        mkdir mobile-app
        cd mobile-app
        
        # Initialize npm project
        npm init -y
        
        # Install Capacitor dependencies with specific versions for Java 17 compatibility
        npm install @capacitor/core@5.7.8 @capacitor/cli@5.7.8
        npm install @capacitor/android@5.7.8
        
        # Initialize Capacitor
        npx cap init "${{ github.event.inputs.appName }}" "${{ github.event.inputs.bundleId }}" --web-dir=www
        
        # Create www directory and basic HTML
        mkdir -p www
        cat > www/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>${{ github.event.inputs.appName }}</title>
            <style>
                body, html {
                    margin: 0;
                    padding: 0;
                    height: 100%;
                    overflow: hidden;
                }
                iframe {
                    width: 100%;
                    height: 100%;
                    border: none;
                }
            </style>
        </head>
        <body>
            <iframe src="${{ github.event.inputs.siteUrl }}" allow="camera; microphone; geolocation"></iframe>
        </body>
        </html>
        EOF

    - name: Add Android platform
      run: |
        cd mobile-app
        npx cap add android

    - name: Configure Gradle for Java 17
      run: |
        cd mobile-app
        
        # Create gradle.properties to force Java 17 compatibility
        cat > android/gradle.properties << 'EOF'
        android.useAndroidX=true
        android.enableJetifier=true
        org.gradle.jvmargs=-Xmx2048M -Dkotlin.daemon.jvm.options\="-Xmx2048M"
        
        # Force Java 17 compatibility
        org.gradle.java.home=$JAVA_HOME
        java.sourceCompatibility=17
        java.targetCompatibility=17
        EOF
        
        # Update build.gradle to ensure Java 17 compatibility
        sed -i 's/compileSdk [0-9]*/compileSdk 34/' android/app/build.gradle
        sed -i 's/targetSdk [0-9]*/targetSdk 34/' android/app/build.gradle
        sed -i 's/minSdk [0-9]*/minSdk 22/' android/app/build.gradle
        
        # Ensure compileOptions use Java 17
        if ! grep -q "compileOptions" android/app/build.gradle; then
            sed -i '/android {/a\    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }' android/app/build.gradle
        fi

    - name: Set JAVA_HOME and build
      run: |
        cd mobile-app
        
        # Explicitly set JAVA_HOME
        export JAVA_HOME=$JAVA_HOME_17_X64
        echo "JAVA_HOME set to: $JAVA_HOME"
        java -version
        
        # Sync Capacitor
        npx cap sync android
        
        # Build the Android app
        cd android
        if [ "${{ github.event.inputs.buildType }}" = "aab" ]; then
          ./gradlew bundleRelease
        else
          ./gradlew assembleRelease
        fi

    - name: Upload APK artifact
      if: github.event.inputs.buildType == 'apk' || github.event.inputs.buildType == ''
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: mobile-app/android/app/build/outputs/apk/release/*.apk

    - name: Upload AAB artifact
      if: github.event.inputs.buildType == 'aab'
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: mobile-app/android/app/build/outputs/bundle/release/*.aab
