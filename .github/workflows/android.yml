# Save as: .github/workflows/android.yml
name: Android Build (Capacitor minimal)

on:
  workflow_dispatch:
    inputs:
      appName:
        description: App Name
        required: true
        default: wrap-craft
      bundleId:
        description: Android applicationId (e.g., com.example.app)
        required: true
        default: com.example.wrapcraft
      siteUrl:
        description: Your web app URL (https://...) loaded in the WebView
        required: true
      buildType:
        description: Build variant
        required: true
        type: choice
        default: debug
        options: [debug, release]

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ inputs.appName }}
      BUNDLE_ID: ${{ inputs.bundleId }}
      SITE_URL: ${{ inputs.siteUrl }}
      BUILD_TYPE: ${{ inputs.buildType }}
      WORKDIR: android-wrapper

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Bootstrap Capacitor project
        run: |
          set -euo pipefail
          mkdir -p "$WORKDIR"
          cd "$WORKDIR"

          # Minimal package.json with Capacitor 6 and TypeScript present
          cat > package.json <<'PKG'
          {
            "name": "android-wrapper",
            "version": "1.0.0",
            "private": true,
            "scripts": {
              "cap": "cap",
              "build": "echo \"no web build needed\""
            },
            "devDependencies": {
              "typescript": "^5.5.4"
            },
            "dependencies": {
              "@capacitor/android": "^6.1.0",
              "@capacitor/core": "^6.1.0",
              "@capacitor/cli": "^6.1.0"
            }
          }
PKG

          npm i --no-audit --no-fund

          # Minimal web assets (not used when server.url is set, but kept for safety)
          mkdir -p dist
          cat > dist/index.html <<'HTML'
          <!doctype html>
          <html>
            <head>
              <meta charset="utf-8"/>
              <meta name="viewport" content="width=device-width,initial-scale=1"/>
              <meta http-equiv="refresh" content="0;url=__SITE_URL__"/>
              <title>Loading…</title>
            </head>
            <body>
              <p>Opening app… <a href="__SITE_URL__">Continue</a></p>
            </body>
          </html>
HTML
          sed -i "s|__SITE_URL__|$SITE_URL|g" dist/index.html

          # Use JSON config to avoid TypeScript requirement errors
          cat > capacitor.config.json <<CFG
          {
            "appId": "${BUNDLE_ID}",
            "appName": "${APP_NAME}",
            "webDir": "dist",
            "server": {
              "url": "${SITE_URL}",
              "cleartext": true
            },
            "android": {
              "allowMixedContent": true
            }
          }
CFG

          npx cap add android --yes

          # Ensure correct applicationId in Gradle config
          sed -i "s/applicationId \".*\"/applicationId \"${BUNDLE_ID}\"/" android/app/build.gradle

          # Make gradlew executable just in case
          chmod +x android/gradlew

      - name: Build APK/AAB
        working-directory: ${{ env.WORKDIR }}/android
        run: |
          set -euo pipefail
          # Give Gradle more memory to reduce OOM risks on CI
          echo "org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8" >> gradle.properties

          if [ "${BUILD_TYPE}" = "release" ]; then
            ./gradlew assembleRelease bundleRelease
          else
            ./gradlew assembleDebug
          fi

      - name: Upload APK artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ env.BUILD_TYPE }}
          path: |
            ${{ env.WORKDIR }}/android/app/build/outputs/apk/**/app-*.apk
          if-no-files-found: warn

      - name: Upload AAB artifacts (release only)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: aab-release
          path: |
            ${{ env.WORKDIR }}/android/app/build/outputs/bundle/release/*.aab
          if-no-files-found: warn
