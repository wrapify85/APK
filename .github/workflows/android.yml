name: Android Build (Capacitor minimal)

on:
  workflow_dispatch:
    inputs:
      appName:
        description: Application display name
        required: true
        type: string
      bundleId:
        description: Android package name (e.g., com.example.app)
        required: true
        type: string
      siteUrl:
        description: Web app URL to wrap (https://... or http://... if cleartext)
        required: true
        type: string
      buildType:
        description: Build type
        required: false
        default: debug
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: ${{ inputs.buildType }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0

      - name: Bootstrap Capacitor project
        run: |
          set -euo pipefail
          cat > package.json <<'JSON'
          {
            "name": "wrap-craft",
            "version": "1.0.0",
            "private": true,
            "scripts": {
              "build": "echo noop",
              "cap:sync": "npx cap sync android"
            },
            "dependencies": {
              "@capacitor/core": "^6.1.2"
            },
            "devDependencies": {
              "@capacitor/cli": "^6.1.2"
            }
          }
          JSON

          npm install --no-audit --no-fund

          npx --yes @capacitor/cli init "${{ inputs.appName }}" "${{ inputs.bundleId }}" --skip-deps

          cat > capacitor.config.ts <<'TS'
          import { CapacitorConfig } from '@capacitor/cli';
          const config: CapacitorConfig = {
            appId: '${{ inputs.bundleId }}',
            appName: '${{ inputs.appName }}',
            webDir: 'dist',
            server: {
              url: '${{ inputs.siteUrl }}',
              cleartext: true
            }
          };
          export default config;
          TS

          mkdir -p dist
          printf '<!doctype html><html><head><meta charset="utf-8"><title>%s</title></head><body></body></html>' "${{ inputs.appName }}" > dist/index.html

      - name: Add Android platform
        run: |
          npm install @capacitor/android@latest --no-audit --no-fund
          npx cap add android
          npx cap sync android

      - name: Build APK/AAB
        working-directory: android
        env:
          BUILD_TYPE: ${{ env.BUILD_TYPE }}
        run: |
          set -euo pipefail
          if [ "${BUILD_TYPE}" = "release" ]; then
            ./gradlew assembleRelease bundleRelease
          else
            ./gradlew assembleDebug bundleDebug
          fi

      - name: Upload APK artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ inputs.buildType }}-apk
          path: android/app/build/outputs/apk/**/*.apk
          if-no-files-found: error
          retention-days: 14

      - name: Upload AAB artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ inputs.buildType }}-aab
          path: android/app/build/outputs/bundle/**/*.aab
          if-no-files-found: warn
          retention-days: 14
